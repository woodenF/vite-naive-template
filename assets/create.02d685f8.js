import{aI as e,y as n,x as t}from"./index.cc37aceb.js";import{z as r,e as o,d as a,a as i,w as s,r as c,f as l,g as u}from"./vue.201ae94a.js";function d(e,n){let{target:t}=e;for(;t;){if(t.dataset&&void 0!==t.dataset[n])return!0;t=t.parentElement}return!1}function f(c={},l){const u=r({ctrl:!1,command:!1,win:!1,shift:!1,tab:!1}),{keydown:d,keyup:f}=c,h=e=>{switch(e.key){case"Control":u.ctrl=!0;break;case"Meta":u.command=!0,u.win=!0;break;case"Shift":u.shift=!0;break;case"Tab":u.tab=!0}void 0!==d&&Object.keys(d).forEach((n=>{if(n!==e.key)return;const t=d[n];if("function"==typeof t)t(e);else{const{stop:n=!1,prevent:r=!1}=t;n&&e.stopPropagation(),r&&e.preventDefault(),t.handler(e)}}))},y=e=>{switch(e.key){case"Control":u.ctrl=!1;break;case"Meta":u.command=!1,u.win=!1;break;case"Shift":u.shift=!1;break;case"Tab":u.tab=!1}void 0!==f&&Object.keys(f).forEach((n=>{if(n!==e.key)return;const t=f[n];if("function"==typeof t)t(e);else{const{stop:n=!1,prevent:r=!1}=t;n&&e.stopPropagation(),r&&e.preventDefault(),t.handler(e)}}))},g=()=>{(void 0===l||l.value)&&(t("keydown",document,h),t("keyup",document,y)),void 0!==l&&s(l,(e=>{e?(t("keydown",document,h),t("keyup",document,y)):(n("keydown",document,h),n("keyup",document,y))}))};return e()?(o(g),a((()=>{(void 0===l||l.value)&&(n("keydown",document,h),n("keyup",document,y))}))):g(),i(u)}function h(e,n,t){var r;const o=l(e,null);if(null===o)return;const i=null===(r=u())||void 0===r?void 0:r.proxy;function c(e,t){const r=o[n];void 0!==t&&function(e,n){e[n]||(e[n]=[]);e[n].splice(e[n].findIndex((e=>e===i)),1)}(r,t),void 0!==e&&function(e,n){e[n]||(e[n]=[]);~e[n].findIndex((e=>e===i))||e[n].push(i)}(r,e)}s(t,c),c(t.value),a((()=>{c(void 0,t.value)}))}function y(e,n,t){if(!n)return e;const r=c(e.value);let o=null;return s(e,(e=>{null!==o&&window.clearTimeout(o),!0===e?t&&!t.value?r.value=!0:o=window.setTimeout((()=>{r.value=!0}),n):r.value=!1})),r}function g(e){return Array.isArray(e)?e:[e]}const p="STOP";function k(e,n){const t=n(e);void 0!==e.children&&t!==p&&e.children.forEach((e=>k(e,n)))}function v(e){return e.children}function w(e){return e.key}function m(){return!1}function b(e){return!0===e.disabled}function N(e){var n;return null==e?[]:Array.isArray(e)?e:null!==(n=e.checkedKeys)&&void 0!==n?n:[]}function A(e){var n;return null==e||Array.isArray(e)?[]:null!==(n=e.indeterminateKeys)&&void 0!==n?n:[]}function L(e,n){const t=new Set(e);return n.forEach((e=>{t.has(e)||t.add(e)})),Array.from(t)}function K(e,n){const t=new Set(e);return n.forEach((e=>{t.has(e)&&t.delete(e)})),Array.from(t)}function E(e){return"group"===(null==e?void 0:e.type)}function S(e){const n=new Map;return e.forEach(((e,t)=>{n.set(e.key,t)})),e=>{var t;return null!==(t=n.get(e))&&void 0!==t?t:null}}class x extends Error{constructor(){super(),this.message="SubtreeNotLoadedError: checking a subtree whose required nodes are not fully loaded."}}function P(e,n,t,r){const o=C(n,t,r,!1),a=C(e,t,r,!0),i=function(e,n){const t=new Set;return e.forEach((e=>{const r=n.treeNodeMap.get(e);if(void 0!==r){let e=r.parent;for(;null!==e&&!e.disabled&&!t.has(e.key);)t.add(e.key),e=e.parent}})),t}(e,t),s=[];return o.forEach((e=>{(a.has(e)||i.has(e))&&s.push(e)})),s.forEach((e=>o.delete(e))),o}function G(e,n){const{checkedKeys:t,keysToCheck:r,keysToUncheck:o,indeterminateKeys:a,cascade:i,leafOnly:s,checkStrategy:c,allowNotLoaded:l}=e;if(!i)return void 0!==r?{checkedKeys:L(t,r),indeterminateKeys:Array.from(a)}:void 0!==o?{checkedKeys:K(t,o),indeterminateKeys:Array.from(a)}:{checkedKeys:Array.from(t),indeterminateKeys:Array.from(a)};const{levelTreeNodeMap:u}=n;let d;d=void 0!==o?P(o,t,n,l):void 0!==r?function(e,n,t,r){return C(n.concat(e),t,r,!1)}(r,t,n,l):C(t,n,l,!1);const f="parent"===c,h="child"===c||s,y=d,g=new Set;for(let p=Math.max.apply(null,Array.from(u.keys()));p>=0;p-=1){const e=0===p,n=u.get(p);for(const t of n){if(t.isLeaf)continue;const{key:n,shallowLoaded:r}=t;if(h&&r&&t.children.forEach((e=>{!e.disabled&&!e.isLeaf&&e.shallowLoaded&&y.has(e.key)&&y.delete(e.key)})),t.disabled||!r)continue;let o=!0,a=!1,i=!0;for(const e of t.children){const n=e.key;if(!e.disabled)if(i&&(i=!1),y.has(n))a=!0;else{if(g.has(n)){a=!0,o=!1;break}if(o=!1,a)break}}o&&!i?(f&&t.children.forEach((e=>{!e.disabled&&y.has(e.key)&&y.delete(e.key)})),y.add(n)):a&&g.add(n),e&&h&&y.has(n)&&y.delete(n)}}return{checkedKeys:Array.from(y),indeterminateKeys:Array.from(g)}}function C(e,n,t,r){const{treeNodeMap:o,getChildren:a}=n,i=new Set,s=new Set(e);return e.forEach((e=>{const n=o.get(e);void 0!==n&&k(n,(e=>{if(e.disabled)return p;const{key:n}=e;if(!i.has(n)&&(i.add(n),s.add(n),function(e,n){return!1===e.isLeaf&&!Array.isArray(n(e))}(e.rawNode,a))){if(r)return p;if(!t)throw new x}}))})),s}function M(e,n){const t=e.siblings,r=t.length,{index:o}=e;return n?t[(o+1)%r]:o===t.length-1?null:t[o+1]}function O(e,n,{loop:t=!1,includeDisabled:r=!1}={}){const o="prev"===n?T:M,a={reverse:"prev"===n};let i=!1,s=null;return function n(c){if(null!==c){if(c===e)if(i){if(!e.disabled&&!e.isGroup)return void(s=e)}else i=!0;else if((!c.disabled||r)&&!c.ignored&&!c.isGroup)return void(s=c);if(c.isGroup){const e=j(c,a);null!==e?s=e:n(o(c,t))}else{const e=o(c,!1);if(null!==e)n(e);else{const e=function(e){return e.parent}(c);(null==e?void 0:e.isGroup)?n(o(e,t)):t&&n(o(c,!0))}}}}(e),s}function T(e,n){const t=e.siblings,r=t.length,{index:o}=e;return n?t[(o-1+r)%r]:0===o?null:t[o-1]}function j(e,n={}){const{reverse:t=!1}=n,{children:r}=e;if(r){const{length:e}=r,o=t?-1:e,a=t?-1:1;for(let i=t?e-1:0;i!==o;i+=a){const e=r[i];if(!e.disabled&&!e.ignored){if(!e.isGroup)return e;{const t=j(e,n);if(null!==t)return t}}}}return null}const I={getChild(){return this.ignored?null:j(this)},getParent(){const{parent:e}=this;return(null==e?void 0:e.isGroup)?e.getParent():e},getNext(e={}){return O(this,"next",e)},getPrev(e={}){return O(this,"prev",e)}};function D(e,n,t,r,o,a=null,i=0){const s=[];return e.forEach(((c,l)=>{var u;const d=Object.create(r);if(d.rawNode=c,d.siblings=s,d.level=i,d.index=l,d.isFirstChild=0===l,d.isLastChild=l+1===e.length,d.parent=a,!d.ignored){const e=o(c);Array.isArray(e)&&(d.children=D(e,n,t,r,o,d,i+1))}s.push(d),n.set(d.key,d),t.has(i)||t.set(i,[]),null===(u=t.get(i))||void 0===u||u.push(d)})),s}function F(e,n={}){var t;const r=new Map,o=new Map,{getDisabled:a=b,getIgnored:i=m,getIsGroup:s=E,getKey:c=w}=n,l=null!==(t=n.getChildren)&&void 0!==t?t:v,u=n.ignoreEmptyChildren?e=>{const n=l(e);return Array.isArray(n)?n.length?n:null:n}:l,d=Object.assign({get key(){return c(this.rawNode)},get disabled(){return a(this.rawNode)},get isGroup(){return s(this.rawNode)},get isLeaf(){return function(e,n){const{isLeaf:t}=e;return void 0!==t?t:!n(e)}(this.rawNode,u)},get shallowLoaded(){return function(e,n){const{isLeaf:t}=e;return!(!1===t&&!Array.isArray(n(e)))}(this.rawNode,u)},get ignored(){return i(this.rawNode)},contains(e){return function(e,n){const t=e.key;for(;n;){if(n.key===t)return!0;n=n.parent}return!1}(this,e)}},I),f=D(e,r,o,d,u);function h(e){if(null==e)return null;const n=r.get(e);return n&&!n.ignored?n:null}const y={treeNodes:f,treeNodeMap:r,levelTreeNodeMap:o,maxLevel:Math.max(...o.keys()),getChildren:u,getFlattenedNodes:e=>function(e,n){const t=n?new Set(n):void 0,r=[];return function e(n){n.forEach((n=>{r.push(n),n.isLeaf||!n.children||n.ignored||(n.isGroup||void 0===t||t.has(n.key))&&e(n.children)}))}(e),r}(f,e),getNode:function(e){if(null==e)return null;const n=r.get(e);return!n||n.isGroup||n.ignored?null:n},getPrev:function(e,n){const t=h(e);return t?t.getPrev(n):null},getNext:function(e,n){const t=h(e);return t?t.getNext(n):null},getParent:function(e){const n=h(e);return n?n.getParent():null},getChild:function(e){const n=h(e);return n?n.getChild():null},getFirstAvailableNode:()=>function(e){if(0===e.length)return null;const n=e[0];return n.isGroup||n.ignored||n.disabled?n.getNext():n}(f),getPath:(e,n={})=>function(e,{includeGroup:n=!1,includeSelf:t=!0},r){var o;const a=r.treeNodeMap;let i=null==e?null:null!==(o=a.get(e))&&void 0!==o?o:null;const s={keyPath:[],treeNodePath:[],treeNode:i};if(null==i?void 0:i.ignored)return s.treeNode=null,s;for(;i;)i.ignored||!n&&i.isGroup||s.treeNodePath.push(i),i=i.parent;return s.treeNodePath.reverse(),t||s.treeNodePath.pop(),s.keyPath=s.treeNodePath.map((e=>e.key)),s}(e,n,y),getCheckedKeys(e,n={}){const{cascade:t=!0,leafOnly:r=!1,checkStrategy:o="all",allowNotLoaded:a=!1}=n;return G({checkedKeys:N(e),indeterminateKeys:A(e),cascade:t,leafOnly:r,checkStrategy:o,allowNotLoaded:a},y)},check(e,n,t={}){const{cascade:r=!0,leafOnly:o=!1,checkStrategy:a="all",allowNotLoaded:i=!1}=t;return G({checkedKeys:N(n),indeterminateKeys:A(n),keysToCheck:null==e?[]:g(e),cascade:r,leafOnly:o,checkStrategy:a,allowNotLoaded:i},y)},uncheck(e,n,t={}){const{cascade:r=!0,leafOnly:o=!1,checkStrategy:a="all",allowNotLoaded:i=!1}=t;return G({checkedKeys:N(n),indeterminateKeys:A(n),keysToUncheck:null==e?[]:g(e),cascade:r,leafOnly:o,checkStrategy:a,allowNotLoaded:i},y)},getNonLeafKeys:(e={})=>function(e,n={}){const{preserveGroup:t=!1}=n,r=[],o=t?e=>{e.isLeaf||(r.push(e.key),a(e.children))}:e=>{e.isLeaf||(e.isGroup||r.push(e.key),a(e.children))};function a(e){e.forEach(o)}return a(e),r}(f,e)};return y}export{h as a,F as b,S as c,y as d,d as h,f as u};
